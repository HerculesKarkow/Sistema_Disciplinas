@model DisciplinasFaculdade.ViewModels.DisciplinaViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Disciplina</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Curso, "Curso", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCurso", null, "", htmlAttributes: new { @class = "form-control", onchange = @"
                    var form = document.forms[0];
                    form.action='GetProfessoresList';
                    form.submit();" })
                @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Curso, "Curso", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdCurso", null, "", htmlAttributes: new { @class = "form-control", onchange = "GetProfessor()" })
            @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Turno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Turno, null, htmlAttributes: new { @class = "form-control", onchange = "GetSalas()" })
            @Html.ValidationMessageFor(model => model.Turno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Semestre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Semestre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Semestre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QtdAlunos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QtdAlunos, new { htmlAttributes = new { @class = "form-control", onchange = "GetSalas()" } })
            @Html.ValidationMessageFor(model => model.QtdAlunos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiaDaSemana, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.DiaDaSemana, null, htmlAttributes: new { @class = "form-control", onchange = "GetSalas()" })
            @Html.ValidationMessageFor(model => model.DiaDaSemana, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdSala, "IdSala", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdSala", null, "", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdSala, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdProfessor, "IdProfessor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdProfessor", null, "", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdProfessor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisciplinaParcial, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DisciplinaParcial)
                @Html.ValidationMessageFor(model => model.DisciplinaParcial, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">

        function GetProfessor() {
            var id = $('#IdCurso').val();
            $.ajax({
                url: '/Disciplinas/GetProfessoresList?IdCurso=' + id,
                type: "POST",
                dataType: "JSON",
                data: { Curso: id },
                success: function (list) {
                    $("#IdProfessor").empty();
                    $.each(list, function () {
                        $("#IdProfessor").append($('<option value = "' + this.IdProfessor + '">' + this.Nome + '</option>'));
                    });
                }
            });
        }

        function GetSalas() {
            var quantidade = $('#QtdAlunos').val();
            var turno = $('#Turno').val();
            var diaSemana = $('#DiaDaSemana').val();
            console.log(quantidade, turno, diaSemana)
            $.ajax({
                url: '/Disciplinas/GetSalasQuantidade?QuantidadeAlunos=' + quantidade + '?turno=' + turno + '?diaSemana=' + diaSemana,
                type: "POST",
                dataType: "JSON",
                data: { QtdAluno: quantidade, Turno: turno, DiaDaSemana: diaSemana},
                success: function (list) {
                    $("#IdSala").empty();
                    $.each(list, function () {
                        $("#IdSala").append($('<option value = "' + this.IdSala + '">' + this.Nome + '</option>'));
                    });
                }
            });
        }

        //function GetSalas() {
        //    var quantidade = $('#QtdAlunos').val();
        //    console.log(quantidade)
        //    $.ajax({
        //        url: '/Disciplinas/GetSalasQuantidade?QuantidadeAlunos=' + quantidade,
        //        type: "POST",
        //        dataType: "JSON",
        //        data: { QtdAluno: quantidade },
        //        success: function (list) {
        //            $("#IdSala").empty();
        //            $.each(list, function () {
        //                $("#IdSala").append($('<option value = "' + this.IdSala + '">' + this.Nome + '</option>'));
        //            });
        //        }
        //    });
        //}

        //$(document).ready(function () {
        //    $("#IdCurso").change(function () {
        //        console.log('Entrou');
        //        $.post("/Disciplinas/GetProfessoresList?idCurso=1");
        //        //url.action('Disciplinas', 'GetProfessoresList');
        //    });
        //});
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
